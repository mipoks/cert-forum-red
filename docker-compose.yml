version: "3.7"

services:

  dev-db:
    container_name: cert-db
    image: postgres:14.2
    restart: always
    environment:
      - POSTGRES_USER=qwerty007
      - POSTGRES_PASSWORD=qwerty007
      - POSTGRES_DB=devDB
    command: ["--autovacuum=off"]
    ports:
      - "127.0.0.6:5434:5432"
    networks:
      - app-network

  redisinsight:
    image: redislabs/redisinsight:latest
    ports:
      - '8001:8001'
    volumes:
      - ./Users/ajeetraina/data/redisinsight:/db
    networks:
      - app-network

  dev-redis:
    container_name: redis-service
    image: redis:7.0-rc-alpine
    volumes:
      - ./storage/redis/data:/data
    restart: always
    ports:
      - 6379:6379
    networks:
      - app-network

  dev-elastic:
    container_name: elastic-service
    image: elasticsearch:7.17.2
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - app-network

  cert-zookeeper:
    container_name: cert-zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes


  cert-kafka:
    container_name: cert-kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LOG4J_LOGGER_KAFKA=DEBUG,kafkaAppender
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=cert-zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - cert-zookeeper

  dev-kibana:
    container_name: kibana-service
    image: kibana:8.1.2
    links:
      - dev-elastic
    depends_on:
      - dev-elastic
    ports:
      - 5601:5601
    networks:
      - app-network

networks:
  app-network:
    driver: bridge